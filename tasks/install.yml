---

- name: "awslogs | update apt cache"
  apt:
    update_cache: yes
    cache_valid_time: 86400
  when: ansible_os_family == 'Debian'

- name: "awslogs | check if the service exists"
  stat: path=/etc/init.d/awslogs
  register: service_status

- name: "awslogs | download the installation script"
  get_url:
    dest: /tmp/awslogs-agent-setup.py
    group: root
    owner: root
    mode: 0600
    url: https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py
  when: service_status.stat.exists == false

- name: "awslogs | create nlm specific systemd unit file"
  copy:
    src=awslogs-init.service
    dest=/lib/systemd/system/awslogs-init.service
    owner=root
    group=root
    mode=644
    backup=yes
  when: ansible_service_mgr is defined and ansible_service_mgr == "systemd"

- name: "awslogs | create systemd unit file"
  copy:
    src=awslogs.service
    dest=/lib/systemd/system/awslogs.service
    owner=root
    group=root
    mode=644
    backup=yes
  when: service_status.stat.exists == false and ansible_service_mgr is defined and ansible_service_mgr == "systemd"

- name: "awslogs | upload temporary awslogs.conf"
  template:
    src: awslogs.conf.j2
    dest: /tmp/awslogs.conf
    owner: root
    group: root
    mode: 0644
  when: service_status.stat.exists == false

- name: "awslogs | install the daemon"
  shell: "python /tmp/awslogs-agent-setup.py -n -r {{ awslogs_region }} -c /tmp/awslogs.conf"
  args:
    creates: "/etc/init.d/awslogs"
  notify: restart awslogs

- name: "awslogs | install nlm-specific script"
  copy:
    src=awslogs-reconfig
    dest=/var/awslogs/nlm/awslogs-reconfig
    owner=root
    group=root
    mode=0755
    backup=yes
  when: ansible_service_mgr is defined and ansible_service_mgr == "systemd"
